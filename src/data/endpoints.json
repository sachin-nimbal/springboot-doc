[
  {
    "method": "POST",
    "path": "/api/auth/login",
    "description": "Authenticate user and return JWT token",
    "parameters": [
      {
        "name": "email",
        "type": "string",
        "required": true,
        "description": "User email address"
      },
      {
        "name": "password",
        "type": "string",
        "required": true,
        "description": "User password"
      }
    ],
    "responses": [
      {
        "status": 200,
        "description": "Authentication successful",
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
          "user": {
            "id": 1,
            "email": "user@example.com",
            "name": "John Doe"
          }
        }
      },
      {
        "status": 401,
        "description": "Invalid credentials",
        "example": {
          "error": "Invalid email or password"
        }
      }
    ]
  },
  {
    "method": "GET",
    "path": "/api/users",
    "description": "Get all users with pagination",
    "parameters": [
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number (default: 1)"
      },
      {
        "name": "limit",
        "type": "number",
        "required": false,
        "description": "Items per page (default: 10)"
      },
      {
        "name": "search",
        "type": "string",
        "required": false,
        "description": "Search term for name or email"
      }
    ],
    "responses": [
      {
        "status": 200,
        "description": "Users retrieved successfully",
        "example": {
          "data": [
            {
              "id": 1,
              "email": "user@example.com",
              "name": "John Doe",
              "createdAt": "2024-01-01T00:00:00Z"
            }
          ],
          "pagination": {
            "page": 1,
            "limit": 10,
            "total": 100,
            "pages": 10
          }
        }
      }
    ]
  },
  {
    "method": "POST",
    "path": "/api/users",
    "description": "Create a new user",
    "parameters": [
      {
        "name": "email",
        "type": "string",
        "required": true,
        "description": "User email address"
      },
      {
        "name": "name",
        "type": "string",
        "required": true,
        "description": "User full name"
      },
      {
        "name": "password",
        "type": "string",
        "required": true,
        "description": "User password"
      },
      {
        "name": "roleId",
        "type": "number",
        "required": false,
        "description": "User role ID"
      }
    ],
    "responses": [
      {
        "status": 201,
        "description": "User created successfully",
        "example": {
          "id": 1,
          "email": "user@example.com",
          "name": "John Doe",
          "createdAt": "2024-01-01T00:00:00Z"
        }
      },
      {
        "status": 400,
        "description": "Validation error",
        "example": {
          "error": "Email is required"
        }
      }
    ]
  },
  {
    "method": "PUT",
    "path": "/api/users/{id}",
    "description": "Update user by ID",
    "parameters": [
      {
        "name": "id",
        "type": "number",
        "required": true,
        "description": "User ID"
      },
      {
        "name": "email",
        "type": "string",
        "required": false,
        "description": "User email address"
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": "User full name"
      },
      {
        "name": "roleId",
        "type": "number",
        "required": false,
        "description": "User role ID"
      }
    ],
    "responses": [
      {
        "status": 200,
        "description": "User updated successfully",
        "example": {
          "id": 1,
          "email": "user@example.com",
          "name": "John Doe Updated",
          "updatedAt": "2024-01-01T00:00:00Z"
        }
      },
      {
        "status": 404,
        "description": "User not found",
        "example": {
          "error": "User not found"
        }
      }
    ]
  },
  {
    "method": "DELETE",
    "path": "/api/users/{id}",
    "description": "Delete user by ID",
    "parameters": [
      {
        "name": "id",
        "type": "number",
        "required": true,
        "description": "User ID"
      }
    ],
    "responses": [
      {
        "status": 200,
        "description": "User deleted successfully",
        "example": {
          "message": "User deleted successfully"
        }
      },
      {
        "status": 404,
        "description": "User not found",
        "example": {
          "error": "User not found"
        }
      }
    ]
  }
]
