[
  {
    "method": "GET",
    "path": "/api/users",
    "description": "Get all users with pagination and filtering",
    "parameters": [
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number for pagination",
        "default": 1
      },
      {
        "name": "limit",
        "type": "number",
        "required": false,
        "description": "Number of items per page",
        "default": 10
      },
      {
        "name": "search",
        "type": "string",
        "required": false,
        "description": "Search term for filtering users"
      }
    ],
    "responses": {
      "200": "Paginated list of users",
      "400": "Invalid query parameters",
      "500": "Internal server error"
    },
    "example": {
      "curl": "curl -X GET 'https://api.crudx.com/api/users?page=1&limit=10&search=john'",
      "response": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\",\n      \"createdAt\": \"2024-01-01T00:00:00Z\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"limit\": 10,\n    \"total\": 100,\n    \"pages\": 10\n  }\n}"
    }
  },
  {
    "method": "GET",
    "path": "/api/users/{id}",
    "description": "Get a specific user by ID",
    "parameters": [
      {
        "name": "id",
        "type": "number",
        "required": true,
        "description": "User ID"
      }
    ],
    "responses": {
      "200": "User details",
      "404": "User not found",
      "500": "Internal server error"
    },
    "example": {
      "curl": "curl -X GET 'https://api.crudx.com/api/users/1'",
      "response": "{\n  \"id\": 1,\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"createdAt\": \"2024-01-01T00:00:00Z\",\n  \"updatedAt\": \"2024-01-01T00:00:00Z\"\n}"
    }
  },
  {
    "method": "POST",
    "path": "/api/users",
    "description": "Create a new user",
    "parameters": [
      {
        "name": "body",
        "type": "UserCreateRequest",
        "required": true,
        "description": "User creation data"
      }
    ],
    "responses": {
      "201": "User created successfully",
      "400": "Invalid input data",
      "409": "User already exists",
      "500": "Internal server error"
    },
    "example": {
      "curl": "curl -X POST 'https://api.crudx.com/api/users' -H 'Content-Type: application/json' -d '{\"name\":\"John Doe\",\"email\":\"john@example.com\"}'",
      "response": "{\n  \"id\": 1,\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"createdAt\": \"2024-01-01T00:00:00Z\"\n}"
    }
  },
  {
    "method": "PUT",
    "path": "/api/users/{id}",
    "description": "Update an existing user",
    "parameters": [
      {
        "name": "id",
        "type": "number",
        "required": true,
        "description": "User ID"
      },
      {
        "name": "body",
        "type": "UserUpdateRequest",
        "required": true,
        "description": "User update data"
      }
    ],
    "responses": {
      "200": "User updated successfully",
      "400": "Invalid input data",
      "404": "User not found",
      "500": "Internal server error"
    },
    "example": {
      "curl": "curl -X PUT 'https://api.crudx.com/api/users/1' -H 'Content-Type: application/json' -d '{\"name\":\"John Smith\",\"email\":\"johnsmith@example.com\"}'",
      "response": "{\n  \"id\": 1,\n  \"name\": \"John Smith\",\n  \"email\": \"johnsmith@example.com\",\n  \"updatedAt\": \"2024-01-01T00:00:00Z\"\n}"
    }
  },
  {
    "method": "DELETE",
    "path": "/api/users/{id}",
    "description": "Delete a user",
    "parameters": [
      {
        "name": "id",
        "type": "number",
        "required": true,
        "description": "User ID"
      }
    ],
    "responses": {
      "204": "User deleted successfully",
      "404": "User not found",
      "500": "Internal server error"
    },
    "example": {
      "curl": "curl -X DELETE 'https://api.crudx.com/api/users/1'",
      "response": "No content"
    }
  },
  {
    "method": "GET",
    "path": "/api/posts",
    "description": "Get all posts with pagination and filtering",
    "parameters": [
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number for pagination",
        "default": 1
      },
      {
        "name": "limit",
        "type": "number",
        "required": false,
        "description": "Number of items per page",
        "default": 10
      },
      {
        "name": "authorId",
        "type": "number",
        "required": false,
        "description": "Filter posts by author ID"
      }
    ],
    "responses": {
      "200": "Paginated list of posts",
      "400": "Invalid query parameters",
      "500": "Internal server error"
    },
    "example": {
      "curl": "curl -X GET 'https://api.crudx.com/api/posts?page=1&limit=10&authorId=1'",
      "response": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"title\": \"Sample Post\",\n      \"content\": \"This is a sample post content\",\n      \"authorId\": 1,\n      \"createdAt\": \"2024-01-01T00:00:00Z\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"limit\": 10,\n    \"total\": 50,\n    \"pages\": 5\n  }\n}"
    }
  },
  {
    "method": "POST",
    "path": "/api/posts",
    "description": "Create a new post",
    "parameters": [
      {
        "name": "body",
        "type": "PostCreateRequest",
        "required": true,
        "description": "Post creation data"
      }
    ],
    "responses": {
      "201": "Post created successfully",
      "400": "Invalid input data",
      "401": "Unauthorized",
      "500": "Internal server error"
    },
    "example": {
      "curl": "curl -X POST 'https://api.crudx.com/api/posts' -H 'Content-Type: application/json' -d '{\"title\":\"New Post\",\"content\":\"Post content\",\"authorId\":1}'",
      "response": "{\n  \"id\": 1,\n  \"title\": \"New Post\",\n  \"content\": \"Post content\",\n  \"authorId\": 1,\n  \"createdAt\": \"2024-01-01T00:00:00Z\"\n}"
    }
  }
]